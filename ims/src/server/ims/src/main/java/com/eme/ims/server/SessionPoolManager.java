package com.eme.ims.server;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.apache.mina.core.session.IoSession;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public enum SessionPoolManager {		INSTANCE;		private static Map<String, Object> pool = new HashMap<String, Object>();	private static Map<String, List<String>> groups = new HashMap<String, List<String>>(); 	private Logger logger = LoggerFactory.getLogger(SessionPoolManager.class);	 	 	public List<String> getGroupMembers(String groupId) { 		return groups.get(groupId); 	} 	 	public List<IoSession> getGroupSessions(String groupId) { 		List<String> list = groups.get(groupId); 		List<IoSession> sessions = null; 		 		if (null != list && list.size()>0) { 			sessions = new ArrayList<IoSession>(); 			for (String key : list) { 				IoSession session = this.getSession(key);  				if (null != session) {  					sessions.add(session);  				} 			} 		} 		return sessions; 	}		public void add(String key, IoSession session) {		synchronized(pool) {			pool.put(key, session);		}	}		public void remove(String key) {		synchronized(pool) {			pool.remove(key);		}	}		public IoSession getSession(String key) {				IoSession result = null;		Object obj = pool.get(key);				if (null != obj) {			result = (IoSession) obj;		} else {			logger.debug("has no IoSession in pool ["+key+"]");		}				return result;	}			public int getPoolSize() {				int result = 0;				synchronized(pool) {			result = pool.size();		}				return result;	}	}